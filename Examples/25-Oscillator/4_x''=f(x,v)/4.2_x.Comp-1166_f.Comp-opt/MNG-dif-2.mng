CVNumOfIter  = 1			# максимальное кол-во итераций поиска весов регуляризации
SvF.OptStep = [0, 0.0001, 0.0001]

Select 	t, x  from  Spring5.dat      # считывание данных

SET:	t = [     ,    , 0.025] 	# область определения функции x(t)
	X = [ -0.1, 2.2, 0.1  ] 	# область значений (с запасом) функции x(t)
 	V = [ -1,   1.5, 0.1  ]		# область значений (с запасом) функции v(t)

VAR:    x ( t )   			# искомая функция
	v ( t )			 	# искомая функция
	f ( X, V ) = Polynome (6, c, X, V); Int_smbFxx_2 =False; 		# искомая правая часть - полином 6-ой степени от x и v
f.ArgNormalition = True
#	f ( X, V ); Degree = 6		# искомая правая часть - полином 5-ой степени от x и t
EQ:	d2/dt2(x) ==  f(x,v)		# дифференциальное ур-ие 2-ого порядка
        v == d/dt(x)			# дифференциальное ур-ие 1-ого порядка 

CV:     CV_NumSets=21			# кол-во подмножеств для процедуры кросс-валидации
OBJ:   x.Complexity(Penal[0]) +f.Complexity(Penal[1], Penal[2])/x.V.sigma2 + x.MSD()  # критерий выбора x(t),v(t) и f(x,t)
  
Reg = Polyline ([-1,-1,2.5,2.5,-1], [-0.1,2.2,2.2,-0.1,-0.1], None, 'Region')
Draw	Region;LC:green;LSt:dashed x;LC:r;LSt:solid 		# отображение найденной функции x(t)

:Pl = Polyline (x, v, None, 'Trajectory')
Pl.Y[0]  = Pl.Y[1]			# прячем 0-ую точку
Pl.Y[-1] = Pl.Y[-2]			# прячем последнюю точку

Draw f Trajectory;LC:red		# отображение функции f(x,t) и траектории решения

EOF




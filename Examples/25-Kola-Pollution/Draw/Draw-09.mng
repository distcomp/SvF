Lang = 'Eng'

print (H, hSoil, Snow, sedimMult, leaching,  botSedLeach )

:S.Resize ( [nP,Prognose] )
:W.Resize ( [nP,Prognose] )
:B.Resize ( [nP,Prognose] )
:depIS.Resize ( [nP,Prognose] )
:depS.Resize ( [nP,Prognose] )
RunModel ( EndYear, ProgYear ) 

if (ShoreErr) :
 TWater.AddField ('Err')
 TWater.AddField ('Err_rel')
 TWater.AddField ('CVerr')
 for n in TWater.sR:  
	TWater.Err[n] = waterD.delta ( n )
	TWater.Err_rel[n] = waterD.delta_rel ( n )
	if not waterD.CVerr is None: TWater.CVerr[n] = waterD.CVerr[n]
 TWater.WriteSvFtbl('a.txt')	

 if not waterD.CVerr is None: 
	CVerr = Polyline (TWater.nP[:], TWater.CVerr [:], None, 'CVerr' )
#	Draw CVerr
	CVerr = Polyline (TWater.nW[:], TWater.CVerr [:], None, 'CVerr' )
#	Draw CVerr

 Errs_rel = Polyline (TWater.nP[:], TWater.Err_rel[:], None, 'Errs_rel' )
 Draw Errs_rel
 Errs = Polyline (TWater.nP[:], TWater.Err[:], None, 'Errs' )
 Draw Errs

 Errs_rel = Polyline (TWater.CONn[:], TWater.Err_rel[:], None, 'Errs_rel' )
 Draw Errs_rel
 Errs = Polyline (TWater.CONn[:], TWater.Err[:], None, 'Errs' )
 Draw Errs

Draw Pfi 

if (0) :
	Draw Pfi 
#	Draw  SolubleNik SolubleZap;LC:b
	Draw EmNikZap EmNik;LC:c EmZap;LC:b
	Draw DepNik  DepZap;LC:b 
	Draw PrNik  PrZap;LC:b 
	#Draw  depIS
	#Draw  depS
#	Draw  S
	Draw  soilD
#	Draw B
#	Draw sedim
	Draw botSedD
#	Draw W
	Draw waterD
	Draw deposD


SvF.Xsize = 9;   SvF.Ysize = 3.6;
def DrLake (inP):
  x = []
  d = []
  y = []
  for n in nW.NodS: 
	if nPW.grd[n] == inP:
#	  x.append ( waterD.grd[n] )
	  d.append ( waterD.V.dat[n] )
	  y.append ( tW.grd[n] )
	  x1 = W.grd[int(inP)-1,:]
#	  y1 = t.Val
	  y1 = Prognose.Val

  name = 'P'+str (int(inP))
  Polyline ( y1, x1, 'None’, name )
  Polyline ( y, d, 'None’, name + 'D' )
#  print (name + ' ' + name + 'D;MS:3;LW:0'+ ' ' + name + 'A;MS:3;LW:3')
#  Task.Draw (name + ' ' + name + 'D;MS:3;LW:0;MC:b')

if (0):
  nold =-1
  for n in nW.NodS:
   if nold != nPW.grd[n]:
		nold = nPW.grd[n]
		DrLake (nold)
  name58 = 'P47'		#озеро, сток (SL №80)
  name52 = 'P52'		#Шуонияур, сток (SL № 76)
  name60 = 'P60'		# Аннаярви, сток (SL №69)
  name64 = 'P64'		# р. Пахта (сток оз-реч системы Оресъярви)
  #print ('************************************ ' +name + ' ' + name + 'D;MS:3;LW:0'+ ' ' + name + 'A;MS:3;LW:3')
  print ('************************************ ')
  Task.Draw (name58 + ' '                    + name58 + 'D;MS:3;LW:0 ' \
	   + name52 + ';LW:1;MS:0;LC:b '     + name52 + 'D;MS:3;LW:0;MC:b ' \
	   + name60 + ';LW:1;MS:0;LC:g '     + name60 + 'D;MS:3;LW:0;MC:g ' \
	   + name64 + ';LW:1;MS:0;LC:black ' + name64 + 'D;MS:3;LW:0;MC:black' )
  print ('TND************************************ ')
SvF.Xsize = 5; 
TBott1 = Select Year, Ni_0_1 as botSedD, CONn, nP from EXP_SEDIMNT.xlsx  where  CONn == 161             # Колонка
Param:  botSedD (Year)
if(1) :
  for tt in botSedD.A[0].NodS :
    botSedD.grd[tt] =(B(TBott1.nP[0],botSedD.A[0].Val[tt])-B(TBott1.nP[0],botSedD.A[0].Val[tt]-1)) *15 # /(sedimMult*0.25)   # Подгонка !
#  Draw botSedD;Transp


#SvF.Xsize = 8
#SvF.Ylabel_x=0.13;
#Substitude=False
#EmNikZap.V.oname ='Ni - модель';  EmNikZap.V.data_name ='Ni - данные';  EmNikZap.V.draw_name= 'Выбросы Ni, т/год'; EmNikZap.A[0].oname= 'Годы';
#Substitude=True
#Draw EmNikZap;LW:1.5;MS:0

SvF.Xsize = 9;   SvF.Ysize = 3.6;  SvF.Ylabel_x=0.13;  SvF.Xlabel_x=0.95;
Substitude=False
EmNikZap.V.oname =NiCu+' - Nik+Zap';   
EmNik.V.oname =NiCu+' - Nik';  EmZap.V.oname =NiCu+' - Zap';  
if Lang == 'Rus' :
	EmZap.V.draw_name= 'Выбросы '+NiCu+', т/год'; EmZap.A[0].oname= 'Годы';  EmNikZap.V.data_name =NiCu+' - данные'; 
else :
	EmZap.V.draw_name= 'Emission '+NiCu+', tons/year'; EmZap.A[0].oname= 'Years';  EmNikZap.V.data_name =NiCu+' - data'; 
Substitude=True
Draw EmNikZap;LW:1.5;MS:0;DC:r EmNik;LC:g;LW:0.5 EmZap;LC:b

SvF.Xsize = 5; SvF.Ylabel_x=0.27;  SvF.Xlabel_x=0.99
if Lang == 'Rus' :
	PrZap.V.draw_name= 'Выпадения '+NiCu+', mg/m2/year'
else :
	PrZap.V.draw_name= 'Depositions '+NiCu+', mg/m2/year'

Draw PrNik;LC:g  PrZap;LC:b 

SvF.Ylabel_x=0.21;  SvF.Xlabel_x=0.99
DepNik.grd[:] *= 100
DepZap.grd[:] *= 100
if Lang == 'Rus' :
	DepZap.V.draw_name= '% Выпадения '+NiCu+', %'
else :
	DepZap.V.draw_name= '% Depositions '+NiCu+', %'
Draw DepNik;LC:g  DepZap;LC:b 
DepNik.grd[:] /= 100
DepZap.grd[:] /= 100
#Draw DepNik;LC:g  DepZap;LC:b

SvF.Ylabel_x=0.27;
SolubleNik.grd[:] *= 100
SolubleZap.grd[:] *= 100
if Lang == 'Rus' :
	SolubleZap.V.draw_name= '% растворимого '+NiCu+', %'
else :
	SolubleZap.V.draw_name= '% soluble '+NiCu+', %'
Draw SolubleNik;LC:g SolubleZap;LC:b
SolubleNik.grd[:] /= 100
SolubleZap.grd[:] /= 100
#Draw SolubleNik;LC:g SolubleZap;LC:b


Param:	S_DEPOSITION ( Prognose  )
		A_DEPOSITION ( Prognose )
		S_SOIL ( Prognose )
		A_SOIL ( Prognose )
		M_SOIL ( Prognose )
		S_SEDIMENTION ( Prognose )
		A_SEDIMENTION ( Prognose )
		M_SEDIMENTION ( Prognose )
        S_WATER ( Prognose )
        A_WATER ( Prognose )
        M_WATER ( Prognose )
        M_WATERdep ( Prognose )    # from deposition
        M_WATERlea ( Prognose )    # from leaching·s
        	S_OUT ( Prognose )
        	A_OUT ( Prognose )

Mode = 'NUM' 
#Mode = 'SQUARE'
if (1):
  for ti in Prognose.NodS:
	 S_Catch = 0
	 S_Lakes = 0
	 NoLakes = 0
	 S_DEPOSITION.grd[ti]  = 0
	 S_OUT.grd[ti]         = 0
	 S_SOIL.grd[ti] 	    = 0  
	 S_SEDIMENTION.grd[ti] = 0
	 S_WATER.grd[ti]       = 0
	 A_SOIL.grd[ti] 	    = 0  
	 A_SEDIMENTION.grd[ti] = 0
	 M_SEDIMENTION.grd[ti] = 0
	 A_WATER.grd[ti]       = 0
	 M_SOIL.grd[ti]	    = fonSoilDW * hSoil*800  #fonSoil #* 800*hSoil 
	 M_WATER.grd[ti]	    = fonWater #0
	 M_WATERdep.grd[ti]    = 0
	 M_WATERlea.grd[ti]    = fonWater
	 for bi in nP.NodS:
#		if not ( bi in  TWater.nP ) : continue
	    if bi in  nPW.grd : 				#check!
		 S_Catch += Catch.grd[bi]
		 S_Lakes += SQw.grd[bi]
		 NoLakes += 1

		 Si      = SQw.grd[bi]
		 SQsi = SQs.grd[bi]
		 Catchi  = Catch.grd[bi] 
		 S_DEPOSITION.grd[ti]  += depS.grd[bi,ti] + depIS.grd[bi,ti]
		 S_OUT.grd[ti]         += W.grd[bi,ti] * precip \
					     + depIS.grd[bi,ti] * (SQw.grd[bi] +SQs.grd[bi]*Snow) / Catch.grd[bi] *depISout 
		 S_SOIL.grd[ti]        += (depIS.grd[bi,ti]+depS.grd[bi,ti]*intoIS) * notSnow * SQs.grd[bi]/Catch.grd[bi] 
		 A_SOIL.grd[ti]        += S.grd[bi,ti] * SQs.grd[bi] / Catch.grd[bi] 
		 M_SOIL.grd[ti]        += S.grd[bi,ti] / (800*hSoil)  
		 S_WATER.grd[ti]       += depS.grd[bi,ti] * (Si+SQsi*(Snow+notSnow*(1-intoIS))) / Catchi
		 A_WATER.grd[ti]       += W.grd[bi,ti] * H * Si / Catch.grd[bi] 
		 M_WATER.grd[ti]       += W.grd[bi,ti] 
		 M_WATERdep.grd[ti]    += W.grd[bi,ti] * depS.grd[bi,ti]*(Si+SQsi*(Snow+notSnow*(1-intoIS))) \
			/( depS.grd[bi,ti]*(Si+SQsi*(Snow+notSnow*(1-intoIS)))+leaching·S.grd[bi,ti]·SQsi+botSedLeach·B.grd[bi,ti]·Si )
		 M_WATERlea.grd[ti]    = M_WATER.grd[ti] - M_WATERdep.grd[ti]
#	Wo = w + ( depSo*(Si+SQsi*(Snow+notSnow*(1-intoIS)))+leaching·s·SQsi + botSedLeach·b·Si -Catchi*precip*(w-fonWater) )/(Si*H+Catchi*precip)
		 S_SEDIMENTION.grd[ti] += depIS.grd[bi,ti] * (Si +SQs.grd[bi]*Snow) / Catch.grd[bi] 
		 A_SEDIMENTION.grd[ti] += B.grd[bi,ti] * Si / Catch.grd[bi] 
		 M_SEDIMENTION.grd[ti] += B.grd[bi,ti] 

	 S_DEPOSITION.grd[ti]  /=  NoLakes
	 S_OUT.grd[ti]         /=  NoLakes
	 S_SOIL.grd[ti] 	    /=  NoLakes
	 A_SOIL.grd[ti] 	    /=  NoLakes
	 M_SOIL.grd[ti] 	    /=  NoLakes
	 S_SEDIMENTION.grd[ti] /=  NoLakes
	 A_SEDIMENTION.grd[ti] /=  NoLakes
	 M_SEDIMENTION.grd[ti] /=  NoLakes
	 S_WATER.grd[ti]       /=  NoLakes
	 A_WATER.grd[ti]       /=  NoLakes
	 M_WATER.grd[ti]       /=  NoLakes
	 M_WATERdep.grd[ti]    /=  NoLakes
	 M_WATERlea.grd[ti]    /=  NoLakes

print («*********S_Catch=», S_Catch, «S_Lakes=», S_Lakes, «NoLakes», NoLakes, \
          'Mean_Catch=', S_Catch/NoLakes, 'Mean_Lake=', S_Lakes/NoLakes )

if Mode == 'SQUARE' :
	S_DEPOSITION.grd[:]  /= S_Catch
	S_SOIL.grd[:]        /= S_Catch 
	S_WATER.grd[:]       /= S_Catch
	S_OUT.grd[:]         /= S_Catch 
	S_SEDIMENTION.grd[:] /= S_Catch 
	M_WATER.grd[:]       /= S_Lakes
	A_WATER.grd[:]       /= S_Lakes
	M_SOIL.grd[:]        /= ( S_Catch - S_Lakes)
	A_SOIL.grd[:]        /= ( S_Catch - S_Lakes)


A_DEPOSITION.grd[0]  = S_DEPOSITION.grd[0]
#A_SEDIMENTION.grd[0] = S_SEDIMENTION.grd[0]
A_OUT.grd[0]         = S_OUT.grd[0]

for ti in Prognose.mNodS:
	A_DEPOSITION.grd[ti]  = A_DEPOSITION.grd[ti-1] + S_DEPOSITION.grd[ti]  
	A_OUT.grd[ti]         = A_OUT.grd[ti-1]+ S_OUT.grd[ti] 
A_SOIL.grd[:] -= A_SOIL.grd[0]


SvF.Xsize = 9;   SvF.Ysize = 3.6;  SvF.Ylabel_x=0.35;  SvF.Xlabel_x=0.95;
if Lang == 'Rus' :
  S_WATER.V.oname ='вода';  S_DEPOSITION.V.oname ='всего';  S_SOIL.V.oname ='почва';  S_SEDIMENTION.V.oname ='донные отложения';     #  ВЫПАДЕНИЕ
  S_WATER.V.draw_name = 'Распределение выпадения '+NiCu+', мг/м2/год';   S_SOIL.A[0].oname = 'Годы';
else :
  S_WATER.V.oname ='water';  S_DEPOSITION.V.oname ='total';  S_SOIL.V.oname ='soil';  S_SEDIMENTION.V.oname ='botton sediments';     #  ВЫПАДЕНИЕ
  S_WATER.V.draw_name = 'Distribution of '+NiCu+' depositions, mg/m2/year';   S_WATER.A[0].oname = 'Years';
Draw S_DEPOSITION;MS:0;LW:1.5  S_SEDIMENTION;LC:black;LSt:dotted   S_SOIL;LC:brown;LSt:dashed S_WATER;LC:b;LSt:dashdot 

SvF.Ylabel_x=0.2;																# Накопление
if Lang == 'Rus' :
  A_WATER.V.oname ='вода';  A_DEPOSITION.V.oname ='всего';  A_SOIL.V.oname ='почва';  A_SEDIMENTION.V.oname ='донные отложения'; 
  A_OUT.V.oname ='потери со стоком'; A_WATER.V.draw_name = 'Баланс накопления '+NiCu+', мг/м2';   A_WATER.A[0].oname = 'Годы';
else :
  A_WATER.V.oname ='water';  A_DEPOSITION.V.oname ='total';  A_SOIL.V.oname ='soil';  A_SEDIMENTION.V.oname ='botton sediments'; 
  A_OUT.V.oname ='loss with runoff'; A_WATER.V.draw_name = 'Balance of '+NiCu+' accumulation, mg/m2';   A_WATER.A[0].oname = 'Years';
Draw A_DEPOSITION;MS:0;LW:1.5  A_SEDIMENTION;LC:black;LSt:dotted  A_SOIL;LC:brown;LSt:dashed;MS:0;LW:1.5 A_OUT;LC:green;LSt:solid;MS:3;LW:1  A_WATER;LC:b;LSt:dashdot

SvF.Ylabel_x=0.25;
if Lang == 'Rus' :
  M_WATER.V.draw_name = 'Концентрация '+NiCu+' в воде, мг/м3';   M_WATER.A[0].oname = 'Годы'; 
  M_WATER.V.oname ='вода';  M_WATERdep.V.oname ='выпадения'; M_WATERlea.V.oname ='выщелочивание'
else :
  M_WATER.V.draw_name = NiCu+' Concentration in water, mg/m3';   M_WATER.A[0].oname = 'Years'; 
  M_WATER.V.oname ='water';  M_WATERdep.V.oname ='depositions'; M_WATERlea.V.oname ='leaching'
Draw M_WATERdep M_WATERlea;LC:g M_WATER;LC:b;LSt:dashdot;LW:1.5;MS:0    #M_WATER;LC:c

SvF.Ylabel_x=0.35;
if Lang == 'Rus' :
  M_SOIL.V.draw_name = 'Концентрация '+NiCu+', мг/кг(сух.веса) в почве';   M_SOIL.A[0].oname = 'Годы'; M_SOIL.V.oname ='почва';
else :
  M_SOIL.V.draw_name = NiCu+' Concentration in soil, mg/kg dw';   M_SOIL.A[0].oname = 'Years'; M_SOIL.V.oname ='soil';
Draw M_SOIL;LC:brown;LSt:dashed;LW:1.5;MS:0  #M_SOIL;LC:brown

SvF.Ylabel_x=0.25;
if Lang == 'Rus' :
  M_SEDIMENTION.V.draw_name = 'Запас '+NiCu+' в донных отложениях, мг/м2'; M_SEDIMENTION.A[0].oname = 'Годы'; 
  M_SEDIMENTION.V.oname ='донные отложения';
else :
  M_SEDIMENTION.V.draw_name = 'Amount of '+NiCu+' in botton sediments, mg/m2'; M_SEDIMENTION.A[0].oname = 'Years'; 
  M_SEDIMENTION.V.oname ='botton sediments';
Draw M_SEDIMENTION;LC:brown;LSt:dashed;LW:1.5;MS:0  



INCLUDE: Draw/MAP_KOLA.mng    ##############################

Lakes = Polyline (TWater.Xw[:], TWater.Yw[:], None, 'Lakes' )
Deposs = Polyline (TDep.Xd[:], TDep.Yd[:], None, 'Deposs' )
PSoil = Polyline (TSoil.Xs[:], TSoil.Ys[:], None, 'PSoil' )
PbotSed = Polyline (TBott.Xb[:], TBott.Yb[:], None, 'PbotSed' )


SvF.Xsize = 5.3;
SvF.Legend = False
SvF.X_lim     = [-110,110]
SvF.Y_lim     = [-110,80]


Draw PARAL;LC:gray;LW:1;MS:0 MERID Shore;LC:blue;LW:1;MS:0;LSt:solid Brus;LC:red;MS:0 Bnor_fin  \
   Lakes;MC:w;LW:0;MS:7;MEW:1;MEC:blue Deposs;MC:w;LC:w;MS:6;M:s;MEW:1;MEC:black  PbotSed;M:^;MS:6;MEC:r  PSoil;MC:g;M:X;MS:9;MEW:1;MEC:w \
   Town;M:o;MS:6;LW:0;MC:red;MEW:2;MEC:black
#Draw PARAL;LC:gray;LW:1;MS:0 MERID Shore;LC:blue;LW:1;MS:0;LSt:solid Brus;LC:red;MS:0 Bnor_fin Town;MS:6;LW:0;MC:red;MEW:2;MEC:black \
 #  Lakes;MC:w;LW:0;MS:7;MEW:1;MEC:blue Deposs;MC:w;LC:w;MS:6;M:s;MEW:1;MEC:black Bott;M:^;MS:6;MEC:r  PSoil;MC:g;M:X;MS:9;MEW:1;MEC:w



#SET:	X = [ -100, 100, 2 ]
 #     Y = [ -100, 100, 2 ]
SET:	X = [ -100, 100, 4 ]
      Y = [ -100, 100, 4 ]

SvF.curentTabl = None 
Param: 	pPOL  ( X, Y )
 		SoilXY  ( X, Y )
 		WaterXY  ( X, Y )
		BotSedXY ( X, Y )
 		SoilXYp1  ( X, Y )   # plus 1
	 	WaterXYp1  ( X, Y )
		BotSedXYp1 ( X, Y )

 
DataMarkerSize = 2
SvF.Ylabel_x	=0.05
SvF.Xlabel_x	=0.96
SvF.Ylabel_y    = 0.90
SvF.Xlabel_y    = 0.07
SvF.X_lim     = [-100,100]
SvF.Y_lim     = [-100,100]
SvF.xaxis_step = 50
SvF.yaxis_step = 50
SvF.Xsize           = 5.3
SvF.Ysize           = 4.1

#SvF.X_lim     = []
#SvF.Y_lim     = []

SvF.Legend = True
from matplotlib import ticker
SvF.locator=ticker.LogLocator(base=2.0)

SoilXYp1.grd[:,:] = fonSoilDW * hSoil*800   #fonSoil #* 800*hSoil
WaterXYp1.grd[:,:] = fonWater 
BotSedXYp1.grd[:,:] = 0 


mapCOM = ' PARAL;LC:gray;LW:1;MS:0 MERID Shore;LC:blue;LSt:solid Brus;LC:red;MS:0 Bnor_fin Town;M:o;MS:6;LW:0;MC:red;MEW:2;MEC:black'

pPOLleg = 'pPOL;L:2,8,16,32,64,128,9999;MS:0 '
pWATERleg = 'WaterXY;L:1.5,2,3,10,30,100,300;MS:0 '
pSOILleg = 'SoilXY;L:5,10,25,50,100,200,1000;MS:0 '
#pBOTSEDleg = 'BotSedXY;L:300,1000,3000,10000,30000,100000,1000000;MS:0 '
pBOTSEDleg = 'BotSedXY;L:0.3,1,3,10,30,100,1000;MS:0 '

for tv in range (1946,2051,1):
  SoilXY.grd[:,:]  = SoilXYp1.grd[:,:] 
  WaterXY.grd[:,:] = WaterXYp1.grd[:,:]
  BotSedXY.grd[:,:] = BotSedXYp1.grd[:,:]/1000

  for x in X.NodS :
	for y in Y.NodS :
		xv = X.Val[x]
		yv = Y.Val[y]
		depSo,  depISo,  BotSedXYp1.grd[x,y], SoilXYp1.grd[x,y], WaterXYp1.grd[x,y] \
					= TimeStep(xv,yv,tv,30,1,SoilXY.grd[x,y], WaterXY.grd[x,y], BotSedXYp1.grd[x,y])
		pPOL.grd[x,y] = depSo + depISo
		  
  SoilXY.grd[:,:] /= (800*hSoil)



  if tv in [1980, 1995, 2018, 2050] :
	if Lang == 'Rus' :
	  pPOL.V.draw_name = 'Выпадениe '+NiCu+', мг/м2/год '+str(tv)
	  WaterXY.V.draw_name = NiCu+' в воде, мг/м3 '+str(tv)
	  SoilXY.V.draw_name = NiCu+' в почве, мг/кг(сух.веса) '+str(tv)
	  BotSedXY.V.draw_name = NiCu+' в ДО, г/м2 '+str(tv)
	else :
	  pPOL.V.draw_name = NiCu+' Deposition, mg/m2/year '+str(tv)
	  WaterXY.V.draw_name = NiCu+' in water, mg/m3 '+str(tv)
	  SoilXY.V.draw_name = NiCu+' in soil, mg/kg(dw) '+str(tv)
	  BotSedXY.V.draw_name = NiCu+' in sediments, g/m2 '+str(tv)
	print (tv)		

	
	Task.Draw ( pPOLleg + 'Deposs;MC:w;LC:w;MS:6;M:s;MEW:1;MEC:black;LW:0' + mapCOM )
	Task.Draw ( pWATERleg + 'Lakes;MC:w;LW:0;MS:7;MEW:1;MEC:blue;LW:0' + mapCOM )
:  Task.Draw ( pSOILleg + 'PSoil;MC:g;M:X;MS:9;MEW:1;MEC:w;LW:0' + mapCOM )
#	Draw BotSedXY;L:300,1000,3000,10000,30000,100000,1000000;MS:0 \
 #         PARAL;LC:gray;LW:1;MS:0 MERID Shore;LC:blue;LW:1;MS:0;LSt:solid Brus;LC:red;MS:0 Bnor_fin  \
#	   PbotSed;M:^;MS:6;MEC:r;LW:0 \
 #         Town;M:o;MS:6;LW:0;MC:red;MEW:2;MEC:black
;
:  Task.Draw ( pBOTSEDleg + 'PbotSed;M:^;MS:6;MEC:r;LW:0' + mapCOM )

	continue

#  	Draw SoilXY;L:25,50,100,200,1000,9999;MS:0 #\
  Draw SoilXY;L:10,25,50,100,200,1000;MS:0 \
       PARAL;LC:gray;LW:1;MS:0 MERID Shore;LC:blue;LW:1;MS:0;LSt:solid Brus;LC:red;MS:0 Bnor_fin  \
        PSoil;MC:g;M:X;MS:9;MEW:1;MEC:w;LW:0 \
       Town;M:o;MS:6;LW:0;MC:red;MEW:2;MEC:black
  Draw SoilXY;L:11,25,50,100,200,1000;MS:0 \
       PARAL;LC:gray;LW:1;MS:0 MERID Shore;LC:blue;LW:1;MS:0;LSt:solid Brus;LC:red;MS:0 Bnor_fin  \
        PSoil;MC:g;M:X;MS:9;MEW:1;MEC:w;LW:0 \
       Town;M:o;MS:6;LW:0;MC:red;MEW:2;MEC:black

#   	 P68;LC:gray;LW:1;MS:0;LSt:dotted  P69;MS:0  P70;MS:0  MERID \
 #  	 Shore;LC:blue;LW:1;MS:0;LSt:solid Brus;LC:red;MS:0  Bnor_fin;LC:red;MS:0 Town;MS:6;LW:0;MC:red;MEW:2;MEC:black \
 ##  	 Lakes;MC:w;LW:0;MS:6;MEW:1;MEC:blue Depos;MC:w;LC:w;MS:6;M:s;MEW:1;MEC:black Bott;M:^;MS:6;MEC:r SedAcc  PSoil;MC:g;M:X;MS:9;MEW:1;MEC:w
 
  Draw WaterXY;L:1.2,3,10,30,100,300,1000,3000;MS:0 \
       PARAL;LC:gray;LW:1;MS:0 MERID Shore;LC:blue;LW:1;MS:0;LSt:solid Brus;LC:red;MS:0 Bnor_fin  \
	  Lakes;MC:w;LW:0;MS:7;MEW:1;MEC:blue  \
       Town;M:o;MS:6;LW:0;MC:red;MEW:2;MEC:black
  Draw WaterXY;L:1.5,3,10,30,100,300,1000,3000;MS:0 \
       PARAL;LC:gray;LW:1;MS:0 MERID Shore;LC:blue;LW:1;MS:0;LSt:solid Brus;LC:red;MS:0 Bnor_fin  \
	  Lakes;MC:w;LW:0;MS:7;MEW:1;MEC:blue  \
       Town;M:o;MS:6;LW:0;MC:red;MEW:2;MEC:black

  Draw BotSedXY;L:300,1000,3000,10000,30000,100000,1000000;MS:0 \
       PARAL;LC:gray;LW:1;MS:0 MERID Shore;LC:blue;LW:1;MS:0;LSt:solid Brus;LC:red;MS:0 Bnor_fin  \
	   PbotSed;M:^;MS:6;MEC:r;LW:0 \
       Town;M:o;MS:6;LW:0;MC:red;MEW:2;MEC:black
  Draw BotSedXY;L:200,1000,3000,10000,30000,100000,1000000;MS:0 \
       PARAL;LC:gray;LW:1;MS:0 MERID Shore;LC:blue;LW:1;MS:0;LSt:solid Brus;LC:red;MS:0 Bnor_fin  \
	   PbotSed;M:^;MS:6;MEC:r;LW:0 \
       Town;M:o;MS:6;LW:0;MC:red;MEW:2;MEC:black
  Draw BotSedXY;L:150,1000,3000,10000,30000,100000,1000000;MS:0 \
       PARAL;LC:gray;LW:1;MS:0 MERID Shore;LC:blue;LW:1;MS:0;LSt:solid Brus;LC:red;MS:0 Bnor_fin  \
	   PbotSed;M:^;MS:6;MEC:r;LW:0 \
       Town;M:o;MS:6;LW:0;MC:red;MEW:2;MEC:black
  Draw BotSedXY;L:100,1000,3000,10000,30000,100000,1000000;MS:0 \
       PARAL;LC:gray;LW:1;MS:0 MERID Shore;LC:blue;LW:1;MS:0;LSt:solid Brus;LC:red;MS:0 Bnor_fin  \
	   PbotSed;M:^;MS:6;MEC:r;LW:0 \
       Town;M:o;MS:6;LW:0;MC:red;MEW:2;MEC:black
  Draw BotSedXY;L:80,1000,3000,10000,30000,100000,1000000;MS:0 \
       PARAL;LC:gray;LW:1;MS:0 MERID Shore;LC:blue;LW:1;MS:0;LSt:solid Brus;LC:red;MS:0 Bnor_fin  \
	   PbotSed;M:^;MS:6;MEC:r;LW:0 \
       Town;M:o;MS:6;LW:0;MC:red;MEW:2;MEC:black
  Draw BotSedXY;L:70,1000,3000,10000,30000,100000,1000000;MS:0 \
       PARAL;LC:gray;LW:1;MS:0 MERID Shore;LC:blue;LW:1;MS:0;LSt:solid Brus;LC:red;MS:0 Bnor_fin  \
	   PbotSed;M:^;MS:6;MEC:r;LW:0 \
       Town;M:o;MS:6;LW:0;MC:red;MEW:2;MEC:black
  Draw BotSedXY;L:50,1000,3000,10000,30000,100000,1000000;MS:0 \
       PARAL;LC:gray;LW:1;MS:0 MERID Shore;LC:blue;LW:1;MS:0;LSt:solid Brus;LC:red;MS:0 Bnor_fin  \
	   PbotSed;M:^;MS:6;MEC:r;LW:0 \
       Town;M:o;MS:6;LW:0;MC:red;MEW:2;MEC:black







